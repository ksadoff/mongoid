# todo: test all cases with bson classes
# then see what server behavior is for ruby types, make mongoid match server behavior

- name: existing field - matches float
  document:
    pi: 3.14
  query:
    pi:
      $type: 1
  matches: true

- name: existing field - does not match float
  document:
    pi: 3
  query:
    pi:
      $type: 1
  matches: false

- name: existing field - matches string
  document:
    name: "bob"
  query:
    name:
      $type: 2
  matches: true

- name: existing field - does not match string
  document:
    pi: 3
  query:
    pi:
      $type: 2
  matches: false

- name: existing field - matches Object
  document:
    name: "bob"
  query:
    name:
      $type: 2
  matches: true

- name: existing field - does not match Object
  document:
    pi: 3
  query:
    pi:
      $type: 2
  matches: false

- name: existing field - matches array
  document:
    prices: [1, 2, 3]
  query:
    prices:
      $type: 4
  matches: true

- name: existing field - does not match array
  document:
    pi: 3
  query:
    pi:
      $type: 4
  matches: false

# todo: need binary tests
- name: existing field - matches binData
  document:
    prices: !ruby/object:BSON::Binary
      data: !binary |-
        IW==
      type: :generic
  query:
    prices:
      $type: 5
  matches: true

- name: existing field - matches undefined
  document:
    price: !ruby/object:BSON::Undefined
      # dummy field so Undefined gets constructed
      test: 42
  query:
    price:
      $type: 6
  matches: true

- name: existing field - does not match undefined
  document:
    pi: 3
  query:
    pi:
      $type: 6
  matches: false

- name: existing field - matches ObjectId
  document:
    id: !ruby/object:BSON::ObjectId
      raw_data: !binary |-
        Xt0Zj+G4MlyV5hyJ
  query:
    _id:
      $type: 7
  matches: true

- name: existing field - does not match ObjectId
  document:
    pi: 3
  query:
    pi:
      $type: 7
  matches: false

- name: existing field - matches boolean
  document:
    status: true
  query:
    status:
      $type: 8
  matches: true

- name: existing field - does not match boolean
  document:
    pi: 3
  query:
    pi:
      $type: 8
  matches: false

#need date tests

#- name: existing field - matches date
#  document:
#    name: !ruby/object:BSON::Date
#      pattern: /test/
#      options: ''
#  query:
#    name:
#      $type: 11
#  matches: true

#- name: existing field - matches null
#  document:
#  query:
#    name:
#      $type: 10
#  matches: true

- name: existing field - does not match null
  document:
    pi: 3
  query:
    pi:
      $type: 10
  matches: false

- name: type is 0
  document:
    pi: 3.14
  query:
    pi:
      $type: 0
  error: true

- name: existing field - matches regex
  document:
    name: !ruby/object:BSON::Regexp::Raw
      pattern: /test/
      options: ''
  query:
    name:
      $type: 11
  matches: true

- name: existing field - does not match regex
  document:
    pi: 3
  query:
    pi:
      $type: 11
  matches: false

# need dbpointer tests

# need javascript tests

- name: existing field - matches symbol
  document:
   name: :hello
  query:
    name:
      $type: 14
  matches: true

- name: existing field - does not match symbol
  document:
    pi: 3
  query:
    pi:
      $type: 14
  matches: false

# need javascript with code tests

#- name: existing field - matches int
#  document:
#    pi: 3
#  query:
#    pi:
#      $type: 16
#  matches: true
#
#- name: existing field - does not match int
#  document:
#    pi: 3.14
#  query:
#    pi:
#      $type: 16
#  matches: false

# need timestamp test

#- name: existing field - matches long
#  document:
#    number: 1111111111111111111111111
#  query:
#    number:
#      $type: 18
#  matches: true

- name: existing field - does not match long
  document:
    name: "foo"
  query:
    name:
      $type: 18
  matches: false

#- name: type is -1
#  document:
#    pi: 3.14
#  query:
#    pi:
#      $type: -1
#  matches: true
#
#- name: type is 127
#  document:
#    pi: 3.14
#  query:
#    pi:
#      $type: 127
#  matches: true

- name: type is too negative
  document:
    pi: 3.14
  query:
    pi:
      $type: -2
  error: true

- name: type is too large
  document:
    pi: 3.14
  query:
    pi:
      $type: 42
  error: true

- name: array argument for type
  document:
    pi: 3.14
  query:
    pi:
      $type: [1]
  matches: true

- name: hash argument
  document:
    pi: 3
  query:
    pi:
      $type: {}
  error: true
